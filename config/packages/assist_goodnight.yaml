## Assist Package - Goodnight
## Routine before going to sleep
## https://github.com/don86nl/ha_intents

homeassistant:
  customize:
    script.assist_goodnight:
      settings: &settings
      ########################################################
      ### SET THE VARIABLES HERE TO CUSTOMIZE YOUR ROUTINE ###
      ########################################################
        language: "en"                  #Set to "nl", "en", "de" or "fr".
        
        # Alarm control panel
        arm_alarm: false                #Set this to true if you want the alarm to be armed during the routine.
        
        # Lights
        turn_off_lights: true           #Should all lights be turned off during the routine?
        
        # Media players
        turn_off_media_players: true    #Should media_players be turned off or stopped during the routine?
        media_players_list_turn_off:    #Which media_players should be turned off?
          - media_player.slaapkamer_tv
        stop_media_players:             #Should any media_players be stopped? (which cannot be turned off)
          - media_player.slaapkamer_assistent
          - media_player.keuken_assistent
        
        # Speech
        say_open_windows: true          #Should Assist report open windows in the routine?
        say_open_doors: true            #Should Assist report open doors in the routine?
        
      ########################################################
        
script:
  assist_goodnight:
    alias: "Assist - Goodnight"
    description: "Script for a goodnight routine using HA Assist."
    icon: mdi:assistant
    mode: single
    variables:
      settings: *settings
    sequence:
      - alias: "Set variables"
        variables: &generic_vars
          language:  "{{ settings.get('language') }}"
          arm_alarm:  "{{ settings.get('arm_alarm') }}"
          turn_off_lights: "{{ settings.get('turn_off_lights') }}"
          turn_off_media_players:  "{{ settings.get('turn_off_media_players') }}"
          media_players_list_turn_off:  "{{ settings.get('media_players_list_turn_off') }}"
          stop_media_players:  "{{ settings.get('stop_media_players') }}"
          say_open_windows: "{{ settings.get('say_open_windows') }}"
          say_open_doors: "{{ settings.get('say_open_doors') }}"
      - alias: Turn off lights if any are on and set to true
        choose:
          - conditions:
              - alias: Lights are on
                condition: template
                value_template: >-
                  {{ (states.light|selectattr('state','equalto','on')|list|length) >
                  0 }}
              - alias: Turn off lights is set to true
                condition: template
                value_template: "{{ turn_off_lights == True }}"
            sequence:
              - service: light.turn_off
                alias: Turn off all lights
                data_template:
                  entity_id: >-
                    {{ states.light | selectattr('state','eq','on') |
                    map(attribute='entity_id') | join(', ') }}
                enabled: true
      - alias: Turn off media_players if any are on and set to true
        choose:
          - conditions:
              - alias: Turn off media_players is set to true
                condition: template
                value_template: "{{ turn_off_media_players == True }}"
            sequence:
              - service: media_player.turn_off
                target:
                  entity_id: "{{ media_players_list_turn_off }}"
                alias: Turn off media_players
              - service: media_player.media_stop
                target:
                  entity_id: "{{ media_player.media_stop }}"
                alias: Stop media_players
      - alias: Arm alarm if set to true
        choose:
          - conditions:
              - condition: template
                value_template: "{{ arm_alarm == True }}"
            sequence:
              - service: alarm_control_panel.alarm_arm_home
                target:
                  entity_id: >-
                    {{ states.alarm_control_panel | map(attribute='entity_id') |
                    join(', ') }}
                alias: Turn on any alarm_panel
            alias: Arm alarm if set to true
      - service: input_text.set_value
        target:
          entity_id: input_text.assist_goodnight
        data:
          value: >-
            {%- if say_open_windows == true -%}
              {%- set windows_opened = states.binary_sensor
               | selectattr('attributes.device_class', 'defined')
               | selectattr('attributes.device_class', 'eq', 'window')
               | selectattr('state', 'eq', 'on')
               | list | length -%}
              {%- set windows_opened_list = states.binary_sensor
               | selectattr('attributes.device_class', 'defined')
               | selectattr('attributes.device_class', 'eq', 'window')
               | selectattr('state', 'eq', 'on')
               | map(attribute='name') | join(', ') -%}
            {%- endif -%}
            {%- if say_open_doors == true -%}
              {%- set doors_opened = states.binary_sensor
               | selectattr('attributes.device_class', 'defined')
               | selectattr('attributes.device_class', 'eq', 'door')
               | selectattr('state', 'eq', 'on')
               | list | length -%}
              {%- set doors_opened_list = states.binary_sensor
               | selectattr('attributes.device_class', 'defined')
               | selectattr('attributes.device_class', 'eq', 'door')
               | selectattr('state', 'eq', 'on')
               | map(attribute='name') | join(', ') -%}
            {%- endif -%}
               
            {%- if language == "nl" -%}
              {%- if windows_opened | int(default=0) > 0 -%}
              Er staan {{ windows_opened }} ramen open, namelijk {{ windows_opened_list }}.
              {%- endif -%}
              {%- if doors_opened | int(default=0) > 0 -%}
              Er staan {{ doors_opened }} deuren open, namelijk {{ doors_opened_list }}.
              {%- endif -%}
              {{- ["Ik wens u een fijne nacht ", "Een fijne nacht gewenst ","Welterusten ", "Goedenacht "] | random -}}    
            {%- elif language == "en" -%}
              {%- if windows_opened | int(default=0) > 0 -%}
              There are {{ windows_opened }} windows open, {{ windows_opened_list }}.
              {%- endif -%}
              {% if doors_opened | int(default=0) > 0 %}
             There are {{ doors_opened }} doors open, {{ doors_opened_list }}.
              {%- endif -%}
              {{- ["I wish you a pleasent night ", "Good night ","Sleep well ", "Good evening  "] | random -}}
            {%- elif language == "de" -%}
              {% if windows_opened | int(default=0) > 0 -%}
              Es gibt {{ windows_opened }} geöffnete Fenster, {{ windows_opened_list }}.
              {%- endif -%}
              {%- if doors_opened | int(default=0) > 0 -%}
              Es gibt {{ doors_opened }} geöffnete Türen, {{ doors_opened_list }}.
              {%- endif -%}
              {{- ["Gute Nacht ", "Schlaf gut ","Träumen Sie süß ", "Guten Abend "] | random -}}  
            {%- elif language == "fr" -%}
              {% if windows_opened | int(default=0) > 0 -%}
                Il y a {{ windows_opened }} fenêtres ouvertes, à savoir {{ windows_opened_list }}.
              {%- endif -%}
              {%- if doors_opened | int(default=0) > 0 -%}
                Il y a {{ doors_opened }} portes ouvertes, à savoir {{ doors_opened_list }}.
              {%- endif -%}
              {{- ["Bonne nuit ", "Bonne soirée ","Douce nuit ", "À bientôt "] | random -}}  
            {%- endif %}
            {%- if (states.person|selectattr('state','equalto','home')|list|length) == 1 -%}
            {{- states.person | selectattr('state','eq','home') | map(attribute='name') | join(', ') -}}
            {%- endif -%}.
        alias: Input message
          
input_text:
  assist_goodnight:
    name: "Assist - Goodnight routine"
    icon: mdi:assistant
    max: 255
   
intent_script: 
  Goodnight:
    async_action: false
    action:
      - service: script.assist_goodnight
    speech:
      text: "{{ states('input_text.assist_goodnight') }}"
